# ===============================
#  CI Pipeline (Continuous Integration)
# ===============================
# This workflow runs on every push to the "main" branch.
# It builds a Docker image, logs in to Docker Hub, and pushes the image.
# ===============================

name: CI Pipeline

on:
  push:
    branches: [ "main" ]   # Trigger workflow only when code is pushed to "main"

jobs:
  build:
    runs-on: ubuntu-latest # Use GitHub-hosted Ubuntu runner
    steps:
      # Step 1: Checkout repository code into the runner
      - uses: actions/checkout@v4

      # Step 2: Log in to Docker Hub using secrets stored in GitHub
      # DOCKER_USERNAME = your Docker Hub username (e.g. debajyoti23)
      # DOCKER_PASSWORD = your Docker Hub access token (not password!)
      - name: Login Dockerhub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      # Step 3: Build the Docker image
      # -t sets the tag (debajyoti23/cicd-1:latest)
      # The dot (.) means Dockerfile is in the repo root
      - name: Build your Docker image
        run: docker build -t debajyoti23/cicd-1:latest .

      # Step 4: Push the image to Docker Hub
      # This makes the image available remotely (so CD pipeline can pull it)
      - name: Push to Dockerhub
        run: docker push debajyoti23/cicd-1:latest
